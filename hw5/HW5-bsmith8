Bradford Smith (bsmith8)
CS 615 HW 5 Text Processing
04/07/2018
---------------------------

The first issue that I needed to overcome was installing curl on the NetBSD
instance. I remembered from FreeBSD earlier in the class that the package
manager was called pkg, so I checked for that and pkg_static, both yeilded a
'command not found'. Running `man -k pkg` pointed me to pkg_add(1).

Reading the manpage for pkg_add I found that the package manager works using
files or FTP URLs, and since I didn't have a file I needed to find the NetBSD
FTP URL for curl. A quick Internet search and I found:

    ftp.netbsd.org/pub/pkgsrc/current/pkgsrc/www/curl/README.html

Which allowed me to find the correct URL to use for my architecture and NetBSD
version. The final command I used to install curl ended up being:

    pkg_add ftp://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/i386/7.0/All/curl-7.58.0.tgz

(Later I ended up finding setenv commands for the PKG_PATH in the default .cshrc
waiting to be uncommented which - if I used csh - would have allowed me to
install using `pkg_add curl`).

Then I used curl to download the data for the assignment:

    curl -k https://dumps.wikimedia.org/other/pagecounts-raw/2016/2016-08/pagecounts-20160803-090000.gz >data.gz

I knowingly ignored SSL certificate errors because the assignment specified that
only curl was to be installed and I assumed that to fix this issue I would need
to install another package with SSL certificates.

Part 1
======

I started by writing a test script to submit my answers to the cgi on the
website. Then I wrote up a script to generate my answers and pass them to the
test script. In that script I began building up the commands I would use to get
each of the five answers to part 1.

Occasionally I would jump out of my editor to test some commands more quickly
than sending them to the cgi on the website each time. Eventually I ended up
with a script containing the five commands to get the correct answers.

Part 2
======

The spec for the script for part 2 is different from the quick one I wrote up so
I needed to change it slightly before submitting it for part 2.

I copied my part 1 script into a new file as a starting point. Then I began
pulling functionality out into separate functions for readability and to
minimize code duplication. I needed to alter how the script printed answers in
order to fit the specification for part 2.

I then ran into issues submitting it, the server responded with an HTTP 417.
Eventually it was determined this was due to curl breaking up the POST and
sending 'Expect: 100-continue'. Adding '-H "Expect:"' to my curl command to
submit part 2 resolved this issue.

Part 3
======
